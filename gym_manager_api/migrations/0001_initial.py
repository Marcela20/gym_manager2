# Generated by Django 4.2.6 on 2023-10-15 18:12

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import gym_manager_api.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('second_name', models.CharField(max_length=25)),
                ('phone_number', models.CharField(max_length=15, validators=[gym_manager_api.validators.phone_number_validator])),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gym_manager_api.user')),
                ('role', models.CharField(default='instructor', max_length=25)),
            ],
            bases=('gym_manager_api.user',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gym_manager_api.user')),
                ('role', models.CharField(default='student', max_length=25)),
            ],
            bases=('gym_manager_api.user',),
        ),
        migrations.CreateModel(
            name='Scheduler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hour', models.TimeField(default=datetime.time(10, 30))),
                ('first', models.DateField(default=django.utils.timezone.now)),
                ('last', models.DateField(blank=True, null=True)),
                ('repeat_on', models.CharField(choices=[('MON', 'Monday'), ('TUE', 'Tuesday'), ('WED', 'Wednesday'), ('THR', 'Thursday'), ('FRI', 'Friday'), ('SAT', 'Saturday'), ('SUN', 'Sunday')], max_length=3, null=True)),
                ('classroom', models.ManyToManyField(to='gym_manager_api.classroom')),
                ('instructor', models.ManyToManyField(to='gym_manager_api.instructor')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('whereabouts', models.ManyToManyField(related_name='group', to='gym_manager_api.scheduler')),
                ('students', models.ManyToManyField(to='gym_manager_api.student')),
            ],
        ),
        migrations.CreateModel(
            name='EventException',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('move_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('move_to', models.DateTimeField(default=django.utils.timezone.now)),
                ('group', models.ManyToManyField(to='gym_manager_api.group')),
                ('attendees', models.ManyToManyField(to='gym_manager_api.student')),
                ('instructor', models.ManyToManyField(to='gym_manager_api.instructor')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('group', models.ManyToManyField(to='gym_manager_api.group')),
                ('attendees', models.ManyToManyField(to='gym_manager_api.student')),
                ('instructor', models.ManyToManyField(to='gym_manager_api.instructor')),
            ],
        ),
    ]
